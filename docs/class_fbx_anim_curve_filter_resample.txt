   Toggle the navigation pane
   [toggle_navigation.gif]
   Add to Favorites
   [add_favorite.gif]
   Home: Autodesk FBX SDK Documentation
   [nav-home-xp.gif]
   Share
   [nav-share.gif]
   [nav-print.gif]

   [nav-null-xp.gif]
   [nav-null-xp.gif]
   [nav-null-xp.gif]


   Translate this page
   Powered by Microsoft® Translator
   FbxAnimCurveFilterResample Class Reference







     * Main Page

   Public Member Functions
   FbxAnimCurveFilterResample Class Reference
   Search for all occurrences

   #include <fbxanimcurvefilters.h>


Class Description

   Re-sampling filter.

   Filter to re-sample animation curves.

   Definition at line 680 of file fbxanimcurvefilters.h.
   Inheritance diagram for FbxAnimCurveFilterResample:
   [USEMAP:class_fbx_anim_curve_filter_resample.png]

   List of all members.

Public Member Functions

                         FbxAnimCurveFilterResample ()
                         Constructor.
                virtual  ~FbxAnimCurveFilterResample ()
                         Destructor.
   virtual const char *  GetName () const
                         Get the name of the filter.
           virtual bool  Apply (FbxAnimCurve &pCurve, FbxStatus *pStatus=NULL)
                         Apply the filter on an animation curve.
           virtual void  Reset ()
                         Reset the filter to its default parameters.
                   void  SetKeysOnFrame (bool pKeysOnFrame)
                         Set if the keys are on frame.
                   bool  GetKeysOnFrame () const
                         Get if the keys are on frame.
                FbxTime  GetPeriodTime () const
                         Get the re-sampling period.
                   void  SetPeriodTime (FbxTime &pPeriod)
                         Set the re-sampling period.
                   bool  GetIntelligentMode () const
                         Get the mode that determines how the re-sample filter will set the interpolation and tangent of each key.
                   void  SetIntelligentMode (bool pIntelligent)
                         Set the mode that determines how the re-sample filter will set the interpolation and tangent of each key.

Exposed parent class methods.

           virtual bool  Apply (FbxAnimStack *pAnimStack, FbxStatus *pStatus=NULL)
                         Apply filter to all the curves stored in the animation stack.
           virtual bool  Apply (FbxObject *pObj, FbxAnimStack *pAnimStack, FbxStatus *pStatus=NULL)
                         Apply filter to all the animated properties of the object.
           virtual bool  Apply (FbxAnimCurveNode &pCurveNode, FbxStatus *pStatus=NULL)
                         Apply filter on all the curves of an animation curve node.
           virtual bool  Apply (FbxAnimCurve **pCurve, int pCount, FbxStatus *pStatus=NULL)
                         Apply filter on an array of animation curves.


Constructor & Destructor Documentation

   FbxAnimCurveFilterResample ( )

   Constructor.
   virtual ~FbxAnimCurveFilterResample ( ) [inline, virtual]

   Destructor.

   Definition at line 687 of file fbxanimcurvefilters.h.
{};


Member Function Documentation

   virtual const char* GetName ( ) const [virtual]
   Search for all occurrences

   Get the name of the filter.

   Returns:
          Pointer to name.

   Reimplemented from FbxAnimCurveFilter.
   virtual bool Apply ( FbxAnimStack *  pAnimStack,
                        FbxStatus *     pStatus = NULL
                      )                 [inline, virtual]
   Search for all occurrences

   Apply filter to all the curves stored in the animation stack.

   Parameters:

          pAnimStack Animation stack where to retrieve the animation curves
          pStatus    The FbxStatus object to hold error codes.

   Returns:
          true if the curve filtering operation was successful, false otherwise.

   Reimplemented from FbxAnimCurveFilter.

   Definition at line 698 of file fbxanimcurvefilters.h.
{ return FbxAnimCurveFilter::Apply(pAnimStack, pStatus); }

   virtual bool Apply ( FbxObject *     pObj,
                        FbxAnimStack *  pAnimStack,
                        FbxStatus *     pStatus = NULL
                      )                 [inline, virtual]
   Search for all occurrences

   Apply filter to all the animated properties of the object.

   Parameters:

          pObj       Object containing the animated properties to which the filter is applied.
          pAnimStack Animation stack where to retrieve the animation curves
          pStatus    The FbxStatus object to hold error codes.

   Returns:
          true if the curve filtering operation was successful, false otherwise.

   Reimplemented from FbxAnimCurveFilter.

   Definition at line 699 of file fbxanimcurvefilters.h.
{ return FbxAnimCurveFilter::Apply(pObj, pAnimStack, pStatus); }

   virtual bool Apply ( FbxAnimCurveNode &  pCurveNode,
                        FbxStatus *         pStatus = NULL
                      )                     [inline, virtual]
   Search for all occurrences

   Apply filter on all the curves of an animation curve node.

   Parameters:

          pCurveNode Curve node to which the filter is applied.
          pStatus    The FbxStatus object to hold error codes.

   Returns:
          true if the curve filtering operation was successful, false otherwise.

   Remarks:
          This method collects all the FbxAnimCurve objects connected to the curve node and calls Apply(FbxAnimCurve**, int)

   Reimplemented from FbxAnimCurveFilter.

   Definition at line 700 of file fbxanimcurvefilters.h.
{ return FbxAnimCurveFilter::Apply(pCurveNode, pStatus); }

   virtual bool Apply ( FbxAnimCurve **  pCurve,
                        int              pCount,
                        FbxStatus *      pStatus = NULL
                      )                  [inline, virtual]
   Search for all occurrences

   Apply filter on an array of animation curves.

   Parameters:

          pCurve  Array of curves to which the filter is applied.
          pCount  Number of curves in the array.
          pStatus The FbxStatus object to hold error codes.

   Returns:
          true if the curve filtering operation was successful, false otherwise.

   Reimplemented from FbxAnimCurveFilter.

   Definition at line 701 of file fbxanimcurvefilters.h.
{ return FbxAnimCurveFilter::Apply(pCurve, pCount, pStatus); }

   virtual bool Apply ( FbxAnimCurve &  pCurve,
                        FbxStatus *     pStatus = NULL
                      )                 [virtual]
   Search for all occurrences

   Apply the filter on an animation curve.

   Parameters:

          pCurve  Curve to which the filter is applied.
          pStatus The FbxStatus object to hold error codes.

   Returns:
          true if the curve filtering operation was successful, false otherwise.

   Implements FbxAnimCurveFilter.
   virtual void Reset ( ) [virtual]
   Search for all occurrences

   Reset the filter to its default parameters.

   Reimplemented from FbxAnimCurveFilter.
   void SetKeysOnFrame ( bool  pKeysOnFrame )
   Search for all occurrences

   Set if the keys are on frame.

   Parameters:

          pKeysOnFrame value if keys are set on frame multiples.

   bool GetKeysOnFrame ( ) const
   Search for all occurrences

   Get if the keys are on frame.

   Returns:
          Value if keys are on frame multiples.

   FbxTime GetPeriodTime ( ) const
   Search for all occurrences

   Get the re-sampling period.

   Returns:
          The re-sampling period.

   void SetPeriodTime ( FbxTime &  pPeriod )
   Search for all occurrences

   Set the re-sampling period.

   Parameters:

          pPeriod The re-sampling period to be set.

   bool GetIntelligentMode ( ) const
   Search for all occurrences

   Get the mode that determines how the re-sample filter will set the interpolation and tangent of each key.

   Returns:
          true if the intelligent mode is on, false otherwise.

   Remarks:
          If intelligent mode is on, interpolation type and tangent mode of each created curve key are set equal to the interpolation type and tangent mode of the closest curve key encountered. If intelligent mode is off, the interpolation type of each created curve key will always be set to CUBIC, and tangent mode will always be set to AUTO.

   void SetIntelligentMode ( bool  pIntelligent )
   Search for all occurrences

   Set the mode that determines how the re-sample filter will set the interpolation and tangent of each key.

   Parameters:

          pIntelligent true, set interpolation type and tangent mode of each created curve key equal to the interpolation type and tangent mode of the closest curve key encountered. false, always set the interpolation type of each created curve key to CUBIC, and always set the tangent mode to AUTO.


   The documentation for this class was generated from the following file:
     * fbxsdk/scene/animation/fbxanimcurvefilters.h

   Please send us your comment about this page
