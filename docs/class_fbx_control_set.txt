   Toggle the navigation pane
   [toggle_navigation.gif]
   Add to Favorites
   [add_favorite.gif]
   Home: Autodesk FBX SDK Documentation
   [nav-home-xp.gif]
   Share
   [nav-share.gif]
   [nav-print.gif]

   [nav-null-xp.gif]
   [nav-null-xp.gif]
   [nav-null-xp.gif]


   Translate this page
   Powered by Microsoft® Translator
   FbxControlSet Class Reference







     * Main Page

   Public Types | Public Member Functions | Static Public Member Functions
   FbxControlSet Class Reference

   This reference page is linked to from the following overview topics: List of Python Fbx classes.
     __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

   Search for all occurrences

   #include <fbxcontrolset.h>


Class Description

   This class contains all methods to either set-up an exported control rig or query information on an imported control rig.

   A Control rig is a character manipulation tool that lets you change the position and orientation of a character to create or alter animation.

   This class also contains some methods to manipulate the FbxEffector and FbxControlSetLink.

   The FbxControlSet class contains FK rig (Forward Kinematics) and IK rig (Inverse Kinematics) animation. The FK rig is represented by a list of nodes while the IK rig is represented by a list of effectors.

   You can access the FK rig with the FbxControlSetLink class, using the functions FbxControlSet::SetControlSetLink() and FbxControlSet::GetControlSetLink().

   You can access the IK rig with the FbxEffector class, using the functions FbxControlSet::SetEffector() and FbxControlSet::GetEffector().

   See also:
          FbxEffector, FbxControlSetLink

   Definition at line 184 of file fbxcontrolset.h.

   List of all members.

Public Types

                         enum   EType { eNone, eFkIk, eIkOnly }
                                Control rig type. More...

Public Member Functions

                          void  Reset ()
                                Reset to default values.
                          void  SetType (EType pType)
                                Set type as given.
                         EType  GetType () const
                                Get type.
                          void  SetUseAxis (bool pUseAxis)
                                Set use axis flag as given.
                          bool  GetUseAxis () const
                                Get use axis flag.
                          void  SetLockTransform (bool pLockTransform)
                                Set lock transform flag as given.
                          bool  GetLockTransform () const
                                Get lock transform flag.
                          void  SetLock3DPick (bool pLock3DPick)
                                Set lock 3D pick flag as given.
                          bool  GetLock3DPick () const
                                Get lock 3D pick flag.
                          bool  SetControlSetLink (FbxCharacter::ENodeId pCharacterNodeId, const FbxControlSetLink &pControlSetLink)
                                Set a control set link for a character node ID.
                          bool  GetControlSetLink (FbxCharacter::ENodeId pCharacterNodeId, FbxControlSetLink *pControlSetLink=NULL) const
                                Get the control set link associated with a character node ID.
                          bool  SetEffector (FbxEffector::ENodeId pEffectorNodeId, FbxEffector pEffector)
                                Set an effector node for an effector node ID.
                          bool  GetEffector (FbxEffector::ENodeId pEffectorNodeId, FbxEffector *pEffector=NULL)
                                Get the effector associated with an effector node ID.
                          bool  SetEffectorAux (FbxEffector::ENodeId pEffectorNodeId, FbxNode *pNode, FbxEffector::ESetId pEffectorSetId=FbxEffector::eAux1Set)
                                Set an auxiliary effector node for an effector node ID.
                          bool  GetEffectorAux (FbxEffector::ENodeId pEffectorNodeId, FbxNode **pNode=NULL, FbxEffector::ESetId pEffectorSetId=FbxEffector::eAux1Set) const
                                Get the auxiliary effector associated with an effector node ID.

Static Public Member Functions

                 static char *  GetEffectorNodeName (FbxEffector::ENodeId pEffectorNodeId)
                                Get the name associated with an effector node ID.
   static FbxEffector::ENodeId  GetEffectorNodeId (char *pEffectorNodeName)
                                Get ID associated with an effector node name.


Member Enumeration Documentation

   enum EType
   Search for all occurrences

   Control rig type.
     * eNone No Control rig.
     * eFkIk Both an FK rig and IK rig.
     * eIkOnly Only an IK rig.

   Enumerator:

          eNone

   Search for all occurrences
          eFkIk

   Search for all occurrences
          eIkOnly

   Search for all occurrences

   Definition at line 197 of file fbxcontrolset.h.
    {
        eNone,
        eFkIk,
        eIkOnly
    };


Member Function Documentation

   void Reset ( )
   Search for all occurrences

   Reset to default values.

   Reset all effector and control set links.
   void SetType ( EType  pType )
   Search for all occurrences

   Set type as given.

   Parameters:

          pType The given type.

   EType GetType ( ) const
   Search for all occurrences

   Get type.

   Returns:
          The gotten type.

   void SetUseAxis ( bool  pUseAxis )
   Search for all occurrences

   Set use axis flag as given.

   Parameters:

          pUseAxis The given use axis flag.

   bool GetUseAxis ( ) const
   Search for all occurrences

   Get use axis flag.

   Returns:
          The gotten use axis flag.

   void SetLockTransform ( bool  pLockTransform )
   Search for all occurrences

   Set lock transform flag as given.

   Parameters:

          pLockTransform The given lock transform flag.

   bool GetLockTransform ( ) const
   Search for all occurrences

   Get lock transform flag.

   Returns:
          The gotten lock transform flag.

   void SetLock3DPick ( bool  pLock3DPick )
   Search for all occurrences

   Set lock 3D pick flag as given.

   Parameters:

          pLock3DPick The given lock 3D pick flag.

   bool GetLock3DPick ( ) const
   Search for all occurrences

   Get lock 3D pick flag.

   Returns:
          The gotten lock 3D pick flag.

   bool SetControlSetLink ( FbxCharacter::ENodeId      pCharacterNodeId,
                            const FbxControlSetLink &  pControlSetLink
                          )
   Search for all occurrences

   Set a control set link for a character node ID.

   Parameters:

          pCharacterNodeId Character node ID.
          pControlSetLink  Control set link to be associated with the Character node ID.

   Returns:
          true if successful, false otherwise.

   Remarks:
          You should avoid setting a control set link for eCharacterLeftFloor, eCharacterRightFloor, eCharacterLeftHandFloor, eCharacterRightHandFloor, eCharacterProps0, eCharacterProps1, eCharacterProps2, eCharacterProps3 or eCharacterProps4. None of these nodes are part of a control set.

   bool GetControlSetLink ( FbxCharacter::ENodeId  pCharacterNodeId,
                            FbxControlSetLink *    pControlSetLink = NULL
                          )                        const
   Search for all occurrences

   Get the control set link associated with a character node ID.

   Parameters:

          pCharacterNodeId Requested character node ID.
          pControlSetLink  Optional pointer that returns the control set link if the function succeeds.

   Returns:
          true if successful, false otherwise.

   Remarks:
          You should avoid getting a control set link for eCharacterLeftFloor, eCharacterRightFloor, eCharacterLeftHandFloor, eCharacterRightHandFloor, eCharacterProps0, eCharacterProps1, eCharacterProps2, eCharacterProps3 or eCharacterProps4. None of these nodes are part of a control set.

   bool SetEffector ( FbxEffector::ENodeId  pEffectorNodeId,
                      FbxEffector           pEffector
                    )
   Search for all occurrences

   Set an effector node for an effector node ID.

   Parameters:

          pEffectorNodeId Effector node ID.
          pEffector       Effector to be associated with the effector node ID.

   Returns:
          true if successful, false otherwise.

   bool GetEffector ( FbxEffector::ENodeId  pEffectorNodeId,
                      FbxEffector *         pEffector = NULL
                    )
   Search for all occurrences

   Get the effector associated with an effector node ID.

   Parameters:

          pEffectorNodeId ID of requested effector node.
          pEffector       Optional pointer that returns the effector if the function succeeds.

   Returns:
          true if successful, false otherwise.

   bool SetEffectorAux ( FbxEffector::ENodeId  pEffectorNodeId,
                         FbxNode *             pNode,
                         FbxEffector::ESetId   pEffectorSetId = FbxEffector::eAux1Set
                       )
   Search for all occurrences

   Set an auxiliary effector node for an effector node ID.

   Parameters:

          pEffectorNodeId Effector node ID.
          pNode           Auxiliary effector node to be associated with the effector node ID.
          pEffectorSetId  Effector set ID. Set to FbxEffector::eAux1Set by default.

   Returns:
          true if successful, false otherwise.

   bool GetEffectorAux ( FbxEffector::ENodeId  pEffectorNodeId,
                         FbxNode **            pNode = NULL,
                         FbxEffector::ESetId   pEffectorSetId = FbxEffector::eAux1Set
                       )                       const
   Search for all occurrences

   Get the auxiliary effector associated with an effector node ID.

   Parameters:

          pEffectorNodeId ID of requested auxiliary effector node.
          pNode           Optional pointer that returns the auxiliary effector node if the function succeeds.
          pEffectorSetId  Effector set ID. Set to FbxEffector::eAux1Set by default.

   Returns:
          true if successful, false otherwise.

   static char* GetEffectorNodeName ( FbxEffector::ENodeId  pEffectorNodeId ) [static]
   Search for all occurrences

   Get the name associated with an effector node ID.

   Parameters:

          pEffectorNodeId Effector node ID.

   Returns:
          Name associated with the effector node ID.

   static FbxEffector::ENodeId GetEffectorNodeId ( char *  pEffectorNodeName ) [static]
   Search for all occurrences

   Get ID associated with an effector node name.

   Parameters:

          pEffectorNodeName Effector node name.

   Returns:
          Effector node ID associated with the given effector node name, or -1 if no effector node with pEffectorNodeName exists.


   The documentation for this class was generated from the following file:
     * fbxsdk/scene/constraint/fbxcontrolset.h

   Please send us your comment about this page
