   Toggle the navigation pane
   [toggle_navigation.gif]
   Add to Favorites
   [add_favorite.gif]
   Home: Autodesk FBX SDK Documentation
   [nav-home-xp.gif]
   Share
   [nav-share.gif]
   [nav-print.gif]

   [nav-null-xp.gif]
   [nav-null-xp.gif]
   [nav-null-xp.gif]


   Translate this page
   Powered by Microsoft® Translator
   FbxConditionalBOF Class Reference







     * Main Page

   Public Member Functions | Static Public Attributes
   FbxConditionalBOF Class Reference
   Search for all occurrences

   #include <fbxbindingoperator.h>


Class Description

   A conditional operator that outputs one out of two properties, based on the value of a predicate property.

   Definition at line 419 of file fbxbindingoperator.h.
   Inheritance diagram for FbxConditionalBOF:
   [USEMAP:class_fbx_conditional_b_o_f.png]

   List of all members.

Public Member Functions

          virtual bool  Evaluate (const FbxBindingOperator *pOperator, const FbxObject *pObject, EFbxType *pResultType, void **pResult) const
                        Evaluates the object property specified by "predicate".
          virtual bool  ReverseEvaluate (const FbxBindingOperator *pOperator, const FbxObject *pTarget, const void *pIn, void **pOut, EFbxType *pOutType, bool setObj, int index) const
                        Run the inverse operator on the given object, assigning the result directly to the object.

Static Public Attributes

   static const char *  FunctionName
                        Name of the operation function.


Member Function Documentation

   virtual bool Evaluate ( const FbxBindingOperator *  pOperator,
                           const FbxObject *           pObject,
                           EFbxType *                  pResultType,
                           void **                     pResult
                         )                             const [virtual]
   Search for all occurrences

   Evaluates the object property specified by "predicate".

   If the property value is true (!= 0, != ""), returns the value of the property specified by "ifTrue", else returns the value of the property specified by "ifFalse".

   Currently the data types supported for the input property are limited to "integer", "boolean", "float", "double" and "string".

   Parameters:

          pOperator   Operator running on the object.
          pObject     The object that will be evaluated.
          pResultType The type of the result to be returned.
          pResult     A pointer to a buffer that can hold the result.

   Returns:
          true on success, false otherwise.

   Implements FbxBindingOperator::Function.
   virtual bool ReverseEvaluate ( const FbxBindingOperator *  pOperator,
                                  const FbxObject *           pTarget,
                                  const void *                pIn,
                                  void **                     pOut,
                                  EFbxType *                  pOutType,
                                  bool                        setObj,
                                  int                         index
                                )                             const [virtual]
   Search for all occurrences

   Run the inverse operator on the given object, assigning the result directly to the object.

   Parameters:

          pOperator The operator that will be applied.
          pTarget   The object that will be evaluated.
          pIn
          pOut
          pOutType  Type of value being reversed.
          setObj    Control to set the property (only to query by the default ).
          index     Used only in FbxMultiplyDistBOF.

   Returns:
          true on success, false otherwise.

   Implements FbxBindingOperator::Function.


Member Data Documentation

   const char* FunctionName [static]
   Search for all occurrences

   Name of the operation function.

   Definition at line 423 of file fbxbindingoperator.h.


   The documentation for this class was generated from the following file:
     * fbxsdk/scene/shading/fbxbindingoperator.h

   Please send us your comment about this page
